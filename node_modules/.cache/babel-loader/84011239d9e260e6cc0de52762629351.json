{"ast":null,"code":"import _defineProperty from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielbecker/Documents/Ski-React-App-Front-End/src/SkiPostContainer/index.jsx\";\nimport React, { Component } from 'react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport './style.css';\nimport SkiPostList from './SkiPostList/SkiPostList';\nimport CreateSkiPost from './CreateSkiPost/CreateSkiPost';\nimport EditSkiPost from './EditSkiPost/EditSkiPost';\n\nvar SkiPostContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SkiPostContainer, _Component);\n\n  function SkiPostContainer() {\n    var _this;\n\n    _classCallCheck(this, SkiPostContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SkiPostContainer).call(this));\n\n    _this.addSkiPost =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(skiPost, e) {\n        var createdSkiPost, parsedSkiPostResponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                e.preventDefault();\n                console.log(skiPost, \"<----- ski post\");\n                _context.next = 5;\n                return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/resort-posts/\"), {\n                  method: \"POST\",\n                  credentials: \"include\",\n                  body: JSON.stringify(skiPost),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 5:\n                createdSkiPost = _context.sent;\n                console.log(createdSkiPost, \"<----- created ski post\");\n                parsedSkiPostResponse = createdSkiPost.json();\n                console.log(parsedSkiPostResponse, \"<---- this is our create response\");\n\n                _this.setState({\n                  skiPosts: _toConsumableArray(_this.state.skiPosts).concat([parsedSkiPostResponse.skiPost])\n                });\n\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0, '<---- create post err');\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 12]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteSkiPost =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/resort-posts/\").concat(id), {\n                  method: \"DELETE\",\n                  credentials: 'include'\n                });\n\n              case 2:\n                // const parsedDeletePostResponse = await deletePostResponse.json();\n                // console.log(parsedDeletePostResponse)\n                _this.getSkiPosts();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.openAndEdit = function (skiPost) {\n      console.log(skiPost, \"ski post to edit\");\n\n      _this.setState({\n        showEditModal: true,\n        skiPostToEdit: _objectSpread({}, skiPost)\n      });\n    };\n\n    _this.handleEditChange = function (e) {\n      _this.setState({\n        skiPostToEdit: _objectSpread({}, _this.state.skiPostToEdit, _defineProperty({}, e.currentTarget.name, e.currentTarget.value))\n      });\n    };\n\n    _this.closeAndEdit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var editPostResponse, pasredEditResponse;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/resort-posts/\").concat(_this.state.skiPostToEdit.id), {\n                  method: 'PUT',\n                  credentials: 'include',\n                  body: JSON.stringify({\n                    resort: _this.state.skiPostToEdit.resort,\n                    body: _this.state.skiPostToEdit.body\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 3:\n                editPostResponse = _context3.sent;\n                pasredEditResponse = editPostResponse.json();\n\n                if (pasredEditResponse.status === 200) {\n                  _this.setState({\n                    showEditModal: false,\n                    skiPostToEdit: _this.state.skiPostToEdit\n                  });\n\n                  console.log(_this.state.showEditModal, \"<--- show edit modal?\");\n\n                  _this.getSkiPosts();\n                }\n\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0, \"<--- edit post error\");\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 8]]);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleLogout =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(e) {\n        var logoutResponse;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                e.preventDefault();\n                _context4.next = 3;\n                return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/users/logout\"));\n\n              case 3:\n                logoutResponse = _context4.sent;\n\n                //const parsedLogoutResponse = logoutResponse.json();\n                if (logoutResponse.status === 200) {\n                  console.log(logoutResponse, \"<---- logout response\");\n                  console.log(_this.props);\n                }\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      skiPosts: [],\n      skiPostToEdit: {\n        resort: '',\n        body: '',\n        id: ''\n      },\n      showEditPost: false\n    };\n    return _this;\n  }\n\n  _createClass(SkiPostContainer, [{\n    key: \"getSkiPosts\",\n    value: function () {\n      var _getSkiPosts = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var response, parsedSkiPosts;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/resort-posts\"), {\n                  credentials: 'include'\n                });\n\n              case 2:\n                response = _context5.sent;\n                console.log(response, \"<----- fetch response\");\n                _context5.next = 6;\n                return response.json();\n\n              case 6:\n                parsedSkiPosts = _context5.sent;\n                console.log(parsedSkiPosts, \"<----- parsedSkiPosts\");\n                this.setState({\n                  skiPosts: parsedSkiPosts.posts\n                });\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function getSkiPosts() {\n        return _getSkiPosts.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getSkiPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"NavButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Button.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"red\",\n        onClick: this.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Logout\"), React.createElement(Button, {\n        color: \"green\",\n        href: \"../MyPostsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"My Posts\"), React.createElement(Button, {\n        color: \"blue\",\n        href: \"../SkiMapContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Ski Map\"))), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"SkiPostContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 2,\n        divided: true,\n        textAlign: \"center\",\n        style: {\n          height: '100%'\n        },\n        verticalAlign: \"top\",\n        stackable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(CreateSkiPost, {\n        addSkiPost: this.addSkiPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(SkiPostList, {\n        skiPosts: this.state.skiPosts,\n        deleteSkiPost: this.deleteSkiPost,\n        openAndEdit: this.openAndEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(EditSkiPost, {\n        open: this.state.showEditModal,\n        skiPostToEdit: this.state.skiPostToEdit,\n        handleEditChange: this.handleEditChange,\n        closeAndEdit: this.closeAndEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return SkiPostContainer;\n}(Component);\n\nexport default SkiPostContainer;","map":{"version":3,"sources":["/Users/danielbecker/Documents/Ski-React-App-Front-End/src/SkiPostContainer/index.jsx"],"names":["React","Component","Grid","Button","SkiPostList","CreateSkiPost","EditSkiPost","SkiPostContainer","addSkiPost","skiPost","e","preventDefault","console","log","fetch","process","env","REACT_APP_BACKEND_ADDRESS","method","credentials","body","JSON","stringify","headers","createdSkiPost","parsedSkiPostResponse","json","setState","skiPosts","state","deleteSkiPost","id","getSkiPosts","openAndEdit","showEditModal","skiPostToEdit","handleEditChange","currentTarget","name","value","closeAndEdit","resort","editPostResponse","pasredEditResponse","status","handleLogout","logoutResponse","props","showEditPost","response","parsedSkiPosts","posts","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Grid , Button} from 'semantic-ui-react';\nimport './style.css';\nimport SkiPostList from './SkiPostList/SkiPostList';\nimport CreateSkiPost from './CreateSkiPost/CreateSkiPost';\nimport EditSkiPost from './EditSkiPost/EditSkiPost';\n\n\n\n\n\nclass SkiPostContainer extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tskiPosts: [],\n\t\t\tskiPostToEdit: {\n\t\t\t\tresort: '',\n\t\t\t\tbody: '',\n\t\t\t\tid: ''\n\t\t\t},\n\t\t\tshowEditPost: false\n\n\t\t}\n\t}\n\tasync getSkiPosts() {\n\t\tconst response = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/resort-posts`, {\n\t\t\tcredentials: 'include'\n\t\t})\n\t\tconsole.log(response, \"<----- fetch response\")\n\n\t\tconst parsedSkiPosts = await response.json();\t\tconsole.log(parsedSkiPosts, \"<----- parsedSkiPosts\")\n\t\tthis.setState({\n\t\t\tskiPosts: parsedSkiPosts.posts\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getSkiPosts();\n\t}\n\n\taddSkiPost = async (skiPost, e) => {\n\n\t\ttry {\n\t\te.preventDefault();\n\n\t\tconsole.log(skiPost, \"<----- ski post\")\n\n\t\tconst createdSkiPost = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/resort-posts/`, {\n\t\t\tmethod: \"POST\",\n\t\t\tcredentials: \"include\",\n\t\t\tbody: JSON.stringify(skiPost),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t});\n\n\t\tconsole.log(createdSkiPost, \"<----- created ski post\")\n\n\t\tconst parsedSkiPostResponse = createdSkiPost.json();\n\t\tconsole.log(parsedSkiPostResponse, \"<---- this is our create response\")\n\n\t\tthis.setState({\n\t\t\tskiPosts: \n\t\t\t[...this.state.skiPosts, parsedSkiPostResponse.skiPost]\n\t\t});\n\n\t\t} catch(err) {\n\t\tconsole.log(err, '<---- create post err');\n\n\t\t}\n\n\t}\n\n\tdeleteSkiPost = async (id) => {\n\n\t\tawait fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/resort-posts/${id}`, {\n\t\t\tmethod: \"DELETE\",\n\t\t\tcredentials: 'include'\n\t\t})\n\n\t\t// const parsedDeletePostResponse = await deletePostResponse.json();\n\t\t// console.log(parsedDeletePostResponse)\n\n\t\tthis.getSkiPosts();\n\t}\n\n\topenAndEdit = (skiPost) => {\n\t\tconsole.log(skiPost, \"ski post to edit\");\n\n\n\t\tthis.setState({\n\t\t\tshowEditModal: true,\n\t\t\tskiPostToEdit: {\n\t\t\t\t...skiPost\n\t\t\t}\n\t\t});\n\n\t}\n\n\thandleEditChange = (e) => {\n\n\t\tthis.setState({\n\t\t\tskiPostToEdit: {\n\t\t\t\t...this.state.skiPostToEdit,\n\t\t\t\t[e.currentTarget.name]: e.currentTarget.value\n\t\t\t}\n\t\t});\n\n\t}\n\n\tcloseAndEdit = async (e) => {\n\n\t\ttry {\n\n\t\t\tconst editPostResponse = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/resort-posts/${this.state.skiPostToEdit.id}`, {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\tcredentials: 'include',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tresort: this.state.skiPostToEdit.resort,\n\t\t\t\t\tbody: this.state.skiPostToEdit.body\n\t\t\t\t}),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst pasredEditResponse = editPostResponse.json();\n\t\t\t\n\t\t\tif(pasredEditResponse.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tshowEditModal: false,\n\t\t\t\t\tskiPostToEdit: this.state.skiPostToEdit\n\t\t\t\t});\n\t\t\tconsole.log(this.state.showEditModal, \"<--- show edit modal?\")\t\n\t\t\t\tthis.getSkiPosts();\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.log(err, \"<--- edit post error\")\n\t\t}\n\t}\n\n\thandleLogout = async (e) => {\n\n\t\te.preventDefault();\n\n\t\tconst logoutResponse = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/users/logout`)\n\n\t\t//const parsedLogoutResponse = logoutResponse.json();\n\n\t\tif(logoutResponse.status === 200){\n\t\t\tconsole.log(logoutResponse, \"<---- logout response\")\n\t\t\tconsole.log(this.props)\n\t\t}\n\t}\n\n\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className='NavButtons'>\n\t\t\t\t\t<Button.Group>\n\t\t\t\t\t    <Button color=\"red\" onClick={this.handleLogout}>\n\t\t\t\t\t    \t\tLogout\n\t\t\t\t\t    </Button>\n\t\t\t\t\t    <Button color=\"green\" href='../MyPostsContainer'>\n\t\t\t\t\t\t    \tMy Posts\n\t\t\t\t\t    </Button>\n\t\t\t\t\t    <Button color=\"blue\" href='../SkiMapContainer'>\n\t\t\t\t\t\t    \tSki Map\n\t\t\t\t\t    </Button>\n\t\t\t\t\t </Button.Group>\n\t\t\t\t</div> <br/>\n\t\t\t\t<div className=\"SkiPostContainer\">\n\t\t\t\t\t<Grid columns={2} divided textAlign='center' style={{ height: '100%' }} verticalAlign='top' stackable>\n\t\t\t\t        <Grid.Row>\n\t\t\t\t            <Grid.Column>\n\t\t\t\t\t            <CreateSkiPost addSkiPost={this.addSkiPost} />\n\t\t\t\t\t        </Grid.Column>\n\n\t\t\t\t\t        <Grid.Column>\n\t\t\t\t\t            <SkiPostList skiPosts={this.state.skiPosts} deleteSkiPost={this.deleteSkiPost} openAndEdit={this.openAndEdit}/>\n\t\t\t\t            </Grid.Column>\n\t\t\t\t          <EditSkiPost open={this.state.showEditModal} skiPostToEdit={this.state.skiPostToEdit} handleEditChange={this.handleEditChange} closeAndEdit={this.closeAndEdit}/>\n\t\t\t\t        </Grid.Row>\n\t\t\t        </Grid>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\nexport default SkiPostContainer; \n"]},"metadata":{},"sourceType":"module"}