{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielbecker/Documents/Ski-React-App-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielbecker/Documents/Ski-React-App-Front-End/src/LogInRegister/index.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Button, Grid, Segment } from 'semantic-ui-react';\nimport './style.css';\n\nvar LogInRegister =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogInRegister, _Component);\n\n  function LogInRegister() {\n    var _this;\n\n    _classCallCheck(this, LogInRegister);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogInRegister).call(this));\n\n    _this.handleInput = function (e) {\n      _this.setState(_defineProperty({}, e.currentTarget.name, e.currentTarget.value));\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var response, parsed;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS_LOGIN, \"/\").concat(_this.state.which), {\n                  method: 'POST',\n                  credentials: 'include',\n                  body: JSON.stringify({\n                    username: _this.state.username,\n                    password: _this.state.password\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 4:\n                response = _context.sent;\n                console.log(response, \"<----- response\");\n                _context.next = 8;\n                return response.json();\n\n              case 8:\n                parsed = _context.sent;\n\n                if (parsed.status === 200) {\n                  _this.props.LogIn(parsed.logged_in_as);\n                } else {\n                  _this.setState({\n                    message: parsed.message\n                  });\n                }\n\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0, \"<--- fetch error\");\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.toggle = function () {\n      if (_this.state.which === \"login\") {\n        _this.setState({\n          which: \"register\"\n        });\n      } else {\n        _this.setState({\n          which: \"login\"\n        });\n      }\n    };\n\n    _this.state = {\n      username: '',\n      password: '',\n      which: \"login\",\n      message: ''\n    };\n    return _this;\n  }\n\n  _createClass(LogInRegister, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        columns: 1,\n        textAlign: \"center\",\n        vertical: \"middle\",\n        style: {\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        className: \"LogInGrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" \", this.state.which === \"login\" ? \"Log in here\" : \"Register here\", \" \"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"username\",\n        value: this.state.username,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        value: this.state.password,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.which === \"login\" ? \"Login\" : \"Register\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.which === \"login\" ? \"Need an account? Sign Up\" : \"Already have an account? Log in here\", React.createElement(\"span\", {\n        className: \"fake-link\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" here\")))))));\n    }\n  }]);\n\n  return LogInRegister;\n}(Component);\n\nexport default LogInRegister;","map":{"version":3,"sources":["/Users/danielbecker/Documents/Ski-React-App-Front-End/src/LogInRegister/index.jsx"],"names":["React","Component","Form","Button","Grid","Segment","LogInRegister","handleInput","e","setState","currentTarget","name","value","handleSubmit","preventDefault","fetch","process","env","REACT_APP_BACKEND_ADDRESS_LOGIN","state","which","method","credentials","body","JSON","stringify","username","password","headers","response","console","log","json","parsed","status","props","LogIn","logged_in_as","message","toggle","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Grid, Segment } from 'semantic-ui-react';\nimport './style.css';\n\n\n\nclass LogInRegister extends Component {\n\tconstructor(){\n\t    super();\n\t    this.state = {\n\t        username: '',\n\t        password: '',\n\t        which: \"login\",\n\t        message: ''\n\n\t    }\n\t}\n\thandleInput = (e) => {\n\t\tthis.setState({\n\t\t\t[e.currentTarget.name]: e.currentTarget.value\n\t\t})\n\t}\n\n\thandleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\ttry {\n\t\t\tconst response = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS_LOGIN}/${this.state.which}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tcredentials: 'include',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tusername: this.state.username,\n\t\t\t\t\tpassword: this.state.password\n\t\t\t\t}),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tconsole.log(response, \"<----- response\")\n\n\t\t\tconst parsed = await response.json();\n\n\t\t\tif (parsed.status === 200) {\n\t\t\t\tthis.props.LogIn(parsed.logged_in_as)\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage: parsed.message\n\t\t\t\t})\n\t\t\t}\n\t\t } catch(err){\n\t\t \tconsole.log(err, \"<--- fetch error\")\n\t\t }\n\t}\n\n\ttoggle = () => {\n\t\tif(this.state.which === \"login\"){\n\t\t\tthis.setState({\n\t\t\t\twhich: \"register\"\n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\twhich: \"login\"\n\t\t\t})\n\t\t}\n\t}\n    render(){\n        return(\n          <div>\n          \t<Grid container columns={1} textAlign='center' vertical='middle' style={{height: '100%'}}>\n        \t\t<Segment className=\"LogInGrid\">\n        \t\t<h1 className=\"invalid\">{this.state.message}</h1>\n            \t<h1> {this.state.which === \"login\" ? \"Log in here\" : \"Register here\"} </h1>\n            \t\t<Form onSubmit={this.handleSubmit}>\n\t\t            \t<input\n\t\t            \t\ttype=\"text\"\n\t\t            \t\tname=\"username\"\n\t\t            \t\tplaceholder=\"username\"\n\t\t            \t\tvalue={this.state.username}\n\t\t            \t\tonChange={this.handleInput}\n\t\t            \t\t/>\n\t            \t\t<input\n\t            \t\t\ttype=\"password\"\n\t            \t\t\tname=\"password\"\n\t            \t\t\tplaceholder=\"password\"\n\t            \t\t\tvalue={this.state.password}\n\t            \t\t\tonChange={this.handleInput}\n\t            \t\t\t/> <br />\n            \t\t\t<Button color=\"green\">\n            \t\t\t\t{this.state.which === \"login\" ? \"Login\" : \"Register\"}\n            \t\t\t</Button>\n            \t\t\t<br />\n            \t\t\t<br />\n            \t\t\t<small>\n            \t\t\t\t<h3>{this.state.which === \"login\" ? \"Need an account? Sign Up\" : \"Already have an account? Log in here\"}\n            \t\t\t\t<span className=\"fake-link\" onClick={this.toggle}> here</span></h3>\n            \t\t\t</small>\n            \t\t\t</Form>\n            \t\t</Segment>\n          \t</Grid>\n          </div>  \n        )\n    }\n}\nexport default LogInRegister;"]},"metadata":{},"sourceType":"module"}